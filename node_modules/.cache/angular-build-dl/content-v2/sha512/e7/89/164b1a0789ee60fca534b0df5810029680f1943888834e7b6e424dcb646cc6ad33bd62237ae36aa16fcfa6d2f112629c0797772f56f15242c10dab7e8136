{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_services/account.service.ts","webpack:///src/app/account/account.module.ts","webpack:///src/app/account/login.component.ts","webpack:///src/app/account/login.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/home/welcome.component.ts","webpack:///src/app/home/welcome.component.html","webpack:///src/app/module1/wcomponent.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AccountService","router","http","userSubject","JSON","parse","localStorage","getItem","user","asObservable","username","password","post","pipe","setItem","stringify","next","removeItem","navigate","value","providedIn","AccountModule","imports","declarations","LoginComponent","formBuilder","route","accountService","loading","submitted","form","group","required","invalid","controls","onSubmit","templateUrl","AppComponent","pageTitle","selector","template","AppModule","forRoot","path","component","redirectTo","pathMatch","bootstrap","WelcomeComponent","WComponent","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../_models/user';\n\n@Injectable({ providedIn: 'root' })\nexport class AccountService {\n    private userSubject: BehaviorSubject<User>;\n    public user: Observable<User>;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient\n    ) {\n        this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\n        this.user = this.userSubject.asObservable();\n    }\n\n    public get userValue(): User {\n        return this.userSubject.value;\n    }\n\n    login(username, password) {\n        return this.http.post<User>(`http://90.90122/users/authenticate`, { username, password })\n            .pipe(map(user => {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('user', JSON.stringify(user));\n                this.userSubject.next(user);\n                return user;\n            }));\n    }\n\n    logout() {\n        // remove user from local storage and set current user to null\n        localStorage.removeItem('user');\n        this.userSubject.next(null);\n        this.router.navigate(['/account/login']);\n    }\n\n    register(user: User) {\n        return this.http.post(`http://90.90122/users/register`, user);\n    }\n\n\n}","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n//import { AccountRoutingModule } from './account-routing.module';\nimport { LoginComponent } from './login.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        LoginComponent\n    ]\n})\nexport class AccountModule { }","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService } from '../_services/account.service';\n\n@Component({ templateUrl: 'login.component.html' })\nexport class LoginComponent implements OnInit {\n    form: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n    ) { }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        //this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        // this.loading = true;\n        // this.accountService.login(this.f.username.value, this.f.password.value)\n        //     .pipe(first())\n        //     .subscribe(\n        //         data => {\n        //             this.router.navigate([this.returnUrl]);\n        //         },\n        //         error => {\n        //             this.loading = false;\n        //         });\n    }\n}","<div class=\"card\">\n    <h4 class=\"card-header\">Login</h4>\n    <div class=\"card-body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    Login\n                </button>\n                <a routerLink=\"../register\" class=\"btn btn-link\">Register</a>\n            </div>\n        </form>\n    </div>\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'pm-root',\r\n  template: `\r\n    <div><h1>{{pageTitle}}</h1>\r\n      <div>My First Component</div>\r\n    </div>\r\n    <div class='container'>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n    `\r\n})\r\nexport class AppComponent {\r\n  pageTitle: string = 'Acme s ManageWWment';\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { WComponent } from './module1/wcomponent';\r\nimport { AccountModule } from './account/account.module';\r\nimport { WelcomeComponent } from './home/welcome.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    WComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot([\r\n      { path: 'welcome', component: WelcomeComponent },\r\n      { path: 'bajs', component: WComponent },\r\n      { path: 'abc', component: AccountModule },\r\n      { path: '', redirectTo: 'welcome', pathMatch: 'full' },\r\n      { path: '**', redirectTo: 'welcome', pathMatch: 'full' }\r\n    ])\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: './welcome.component.html'\r\n})\r\nexport class WelcomeComponent {\r\n  public pageTitle = 'Welcome';\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    {{pageTitle}}\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"text-center\">\r\n        <img src=\"./assets/images/logo.jpg\"\r\n             class=\"img-responsive center-block\"\r\n             style=\"max-height:300px;padding-bottom:50px\" />\r\n      </div>\r\n\r\n      <div class=\"text-center\">Developed by:</div>\r\n      <div class=\"text-center\">\r\n        <h3>Deborah Kurata</h3>\r\n      </div>\r\n\r\n      <div class=\"text-center\">@deborahkurata</div>\r\n      <div class=\"text-center\">\r\n        <a href=\"http://www.bit.ly/DeborahKsBlog\">www.bit.ly/DeborahKsBlog</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  template: `\n    <div>\n      <div>My First Component Willy</div>\n    </div>\n    <div class=\"card\">\n      <div class=\"card-body\">\n        This is some text within a card body.\n      </div>\n      <a routerLink=\"../welcome\" class=\"btn btn-link\">Register</a>\n    </div>\n    `\n})\nexport class WComponent {\n  pageTitle: string = 'Acme s ManageWWment';\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}