{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_helpers/auth.guard.ts","webpack:///src/app/_models/user.ts","webpack:///src/app/_services/account.service.ts","webpack:///src/app/account/login.component.ts","webpack:///src/app/account/login.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/welcome.component.ts","webpack:///src/app/home/welcome.component.html","webpack:///src/app/module1/wcomponent.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthGuard","router","accountService","route","state","user","userValue","navigate","queryParams","returnUrl","url","providedIn","User","AccountService","http","userSubject","JSON","parse","localStorage","getItem","asObservable","username","password","removeItem","next","post","value","LoginComponent","formBuilder","loading","submitted","form","group","required","snapshot","login","controls","onSubmit","templateUrl","AppComponent","pageTitle","selector","template","AppModule","forRoot","path","component","canActivate","redirectTo","pathMatch","declarations","imports","bootstrap","HomeComponent","WelcomeComponent","WComponent","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private accountService: AccountService\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const user = this.accountService.userValue;\n        //if (user) {\n            // authorised so return true\n            return true;\n        //}\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/account/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n}","export class User {\n    id: string;\n    username: string;\n    password: string;\n    firstName: string;\n    lastName: string;\n    token: string;\n}","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../_models/user';\n\n@Injectable({ providedIn: 'root' })\nexport class AccountService {\n    private userSubject: BehaviorSubject<User>;\n    public user: Observable<User>;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient\n    ) {\n        this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\n        this.user = this.userSubject.asObservable();\n    }\n\n    public get userValue(): User {\n        return this.userSubject.value;\n    }\n\n    login(username, password) {\n        var user = new User()\n        return user;\n        // return this.http.post<User>(`http://90.90122/users/authenticate`, { username, password })\n        //     .pipe(map(user => {\n        //         // store user details and jwt token in local storage to keep user logged in between page refreshes\n        //         localStorage.setItem('user', JSON.stringify(user));\n        //         this.userSubject.next(user);\n        //         return user;\n        //     }));\n    }\n\n    logout() {\n        // remove user from local storage and set current user to null\n        localStorage.removeItem('user');\n        this.userSubject.next(null);\n        this.router.navigate(['/account/login']);\n    }\n\n    register(user: User) {\n        return this.http.post(`http://90.90122/users/register`, user);\n    }\n\n\n}","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n//import { first } from 'rxjs/operators';\n\nimport { AccountService } from '../_services/account.service';\n\n@Component({ templateUrl: 'login.component.html' })\nexport class LoginComponent implements OnInit {\n    form: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n    ) { }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        // if (this.form.invalid) {\n        //     return;\n        // }\n\n        // this.loading = true;\n        this.accountService.login(\"this.f.username.value\", \"this.f.password.value\");\n        this.router.navigate(['/willy']);\n            // .subscribe(\n            //     data => {\n            //         this.router.navigate([this.returnUrl]);\n            //     },\n            //     error => {\n            //         this.loading = false;\n            //     });\n    }\n}","<div class=\"card\">\n    <h4 class=\"card-header\">Login</h4>\n    <div class=\"card-body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    Login\n                </button>\n                <a routerLink=\"../register\" class=\"btn btn-link\">Register</a>\n            </div>\n        </form>\n    </div>\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'pm-root',\r\n  template: `\r\n    <div><h1>{{pageTitle}}</h1>\r\n      <div>My First Component</div>\r\n    </div>\r\n    <div class='container'>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n    `\r\n})\r\nexport class AppComponent {\r\n  pageTitle: string = 'Acme s ManageWWment';\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { WComponent } from './module1/wcomponent';\r\n\r\nimport { WelcomeComponent } from './home/welcome.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AuthGuard } from './_helpers/auth.guard';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './account/login.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    WComponent,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    BrowserModule,\r\n    RouterModule.forRoot([\r\n      { path: 'welcome', component: WelcomeComponent },\r\n      { path: 'willy', component: HomeComponent, canActivate: [AuthGuard] },\r\n      { path: 'bajs', component: WComponent },\r\n      { path: 'login', component: LoginComponent },\r\n      { path: '', redirectTo: 'welcome', pathMatch: 'full' },\r\n      { path: '**', redirectTo: 'welcome', pathMatch: 'full' }\r\n    ])\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\n\nimport { User } from '../_models/user';\nimport { AccountService } from '../_services/account.service';\n\n@Component({ templateUrl: 'home.component.html' })\nexport class HomeComponent {\n    user: User;\n\n    constructor(private accountService: AccountService) {\n        this.user = this.accountService.userValue;\n    }\n}","<div class=\"p-4\">\n    <div class=\"container\">\n        <h1>Hi {{user.firstName}}!</h1>\n        <p>You're logged in with Angular 9!!</p>\n        <p><a routerLink=\"/users\">Manage Users</a></p>\n    </div>\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: './welcome.component.html'\r\n})\r\nexport class WelcomeComponent {\r\n  public pageTitle = 'Welcome';\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    {{pageTitle}}\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"text-center\">\r\n        <img src=\"./assets/images/logo.jpg\"\r\n             class=\"img-responsive center-block\"\r\n             style=\"max-height:300px;padding-bottom:50px\" />\r\n      </div>\r\n\r\n      <div class=\"text-center\">Developed by:</div>\r\n      <div class=\"text-center\">\r\n        <h3>Deborah Kurata</h3>\r\n      </div>\r\n\r\n      <div class=\"text-center\">@deborahkurata</div>\r\n      <div class=\"text-center\">\r\n        <a href=\"http://www.bit.ly/DeborahKsBlog\">www.bit.ly/DeborahKsBlog</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  template: `\n    <div>\n      <div>My First Component Willy</div>\n    </div>\n    <div class=\"card\">\n      <div class=\"card-body\">\n        This is some text within a card body.\n      </div>\n      <a routerLink=\"../welcome\" class=\"btn btn-link\">Register</a>\n    </div>\n    `\n})\nexport class WComponent {\n  pageTitle: string = 'Acme s ManageWWment';\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}