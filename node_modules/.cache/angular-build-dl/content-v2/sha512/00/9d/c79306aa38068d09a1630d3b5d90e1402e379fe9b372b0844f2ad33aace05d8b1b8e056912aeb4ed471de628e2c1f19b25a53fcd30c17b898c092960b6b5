{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_helpers/auth.guard.ts","webpack:///src/app/_helpers/error.interceptor.ts","webpack:///src/app/_helpers/fake-backend.ts","webpack:///src/app/_helpers/jwt.interceptor.ts","webpack:///src/app/_services/account.service.ts","webpack:///src/app/account/login.component.ts","webpack:///src/app/account/login.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/welcome.component.ts","webpack:///src/app/home/welcome.component.html","webpack:///src/app/module1/wcomponent.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthGuard","router","accountService","route","state","user","userValue","navigate","queryParams","returnUrl","url","providedIn","ErrorInterceptor","request","next","handle","pipe","err","status","logout","error","message","statusText","users","JSON","parse","localStorage","getItem","FakeBackendInterceptor","method","headers","body","handleRoute","endsWith","authenticate","register","getUsers","match","getUserById","updateUser","deleteUser","username","password","find","x","ok","firstName","lastName","token","length","Math","max","map","push","setItem","stringify","isLoggedIn","unauthorized","idFromUrl","params","Object","assign","filter","get","urlParts","split","parseInt","fakeBackendProvider","provide","useClass","multi","JwtInterceptor","isApiUrl","startsWith","clone","setHeaders","Authorization","AccountService","http","userSubject","asObservable","post","removeItem","value","LoginComponent","formBuilder","loading","submitted","form","group","required","snapshot","login","subscribe","data","controls","onSubmit","templateUrl","AppComponent","pageTitle","selector","template","AppModule","forRoot","path","component","canActivate","redirectTo","pathMatch","declarations","imports","providers","bootstrap","HomeComponent","WelcomeComponent","WComponent","environment","production","bootstrapModule","console"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaC,S;AACT,yBACYC,MADZ,EAEYC,cAFZ,EAE0C;AAAA;;AAD9B,aAAAD,MAAA,GAAAA,MAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AACR;;;;oCAEQC,K,EAA+BC,K,EAA4B;AACnE,cAAMC,IAAI,GAAG,KAAKH,cAAL,CAAoBI,SAAjC,CADmE,CAEnE;AACI;;AACA,iBAAO,IAAP,CAJ+D,CAKnE;AAEA;;AACA,eAAKL,MAAL,CAAYM,QAAZ,CAAqB,CAAC,gBAAD,CAArB,EAAyC;AAAEC,uBAAW,EAAE;AAAEC,uBAAS,EAAEL,KAAK,CAACM;AAAnB;AAAf,WAAzC;AACA,iBAAO,KAAP;AACH;;;;;;;uBAhBQV,S,EAAS,8G,EAAA,gI;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS,K;AAAA,kBADI;;;;;sEACbA,S,EAAS;cADrB,wDACqB;eADV;AAAEW,oBAAU,EAAE;AAAd,S;AACU,Q;;;;;;;;;;;;;;;;;;;;;;;;ACNtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,gB;AACT,gCAAoBV,cAApB,EAAoD;AAAA;;AAAhC,aAAAA,cAAA,GAAAA,cAAA;AAAkC;;;;kCAE5CW,O,EAA2BC,I,EAAiB;AAAA;;AAClD,iBAAOA,IAAI,CAACC,MAAL,CAAYF,OAAZ,EAAqBG,IAArB,CAA0B,kEAAW,UAAAC,GAAG,EAAI;AAC/C,gBAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB;AACA,mBAAI,CAAChB,cAAL,CAAoBiB,MAApB;AACH;;AAED,gBAAMC,KAAK,GAAGH,GAAG,CAACG,KAAJ,CAAUC,OAAV,IAAqBJ,GAAG,CAACK,UAAvC;AACA,mBAAO,wDAAWF,KAAX,CAAP;AACH,WARgC,CAA1B,CAAP;AASH;;;;;;;uBAbQR,gB,EAAgB,gI;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB;;;;;sEAAhBA,gB,EAAgB;cAD5B;AAC4B,Q;;;;;;;;;;;;;;;;;;;;;;ACR7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,uD,CAKA;;;AACA,QAAIW,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,KAA6C,EAAzD;;QAGaC,sB;;;;;;;kCACCf,O,EAA2BC,I,EAAiB;AAAA,cAC1CJ,GAD0C,GACXG,OADW,CAC1CH,GAD0C;AAAA,cACrCmB,MADqC,GACXhB,OADW,CACrCgB,MADqC;AAAA,cAC7BC,OAD6B,GACXjB,OADW,CAC7BiB,OAD6B;AAAA,cACpBC,IADoB,GACXlB,OADW,CACpBkB,IADoB,EAGlD;;AACA,iBAAO,gDAAG,IAAH,EACFf,IADE,CACG,gEAASgB,WAAT,CADH,EAEFhB,IAFE,CAEG,oEAFH,EAEkB;AAFlB,WAGFA,IAHE,CAGG,6DAAM,GAAN,CAHH,EAIFA,IAJE,CAIG,sEAJH,CAAP;;AAMA,mBAASgB,WAAT,GAAuB;AACnB,oBAAQ,IAAR;AACI,mBAAKtB,GAAG,CAACuB,QAAJ,CAAa,qBAAb,KAAuCJ,MAAM,KAAK,MAAvD;AACI,uBAAOK,YAAY,EAAnB;;AACJ,mBAAKxB,GAAG,CAACuB,QAAJ,CAAa,iBAAb,KAAmCJ,MAAM,KAAK,MAAnD;AACI,uBAAOM,QAAQ,EAAf;;AACJ,mBAAKzB,GAAG,CAACuB,QAAJ,CAAa,QAAb,KAA0BJ,MAAM,KAAK,KAA1C;AACI,uBAAOO,QAAQ,EAAf;;AACJ,mBAAK1B,GAAG,CAAC2B,KAAJ,CAAU,eAAV,KAA8BR,MAAM,KAAK,KAA9C;AACI,uBAAOS,WAAW,EAAlB;;AACJ,mBAAK5B,GAAG,CAAC2B,KAAJ,CAAU,eAAV,KAA8BR,MAAM,KAAK,KAA9C;AACI,uBAAOU,UAAU,EAAjB;;AACJ,mBAAK7B,GAAG,CAAC2B,KAAJ,CAAU,eAAV,KAA8BR,MAAM,KAAK,QAA9C;AACI,uBAAOW,UAAU,EAAjB;;AACJ;AACI;AACA,uBAAO1B,IAAI,CAACC,MAAL,CAAYF,OAAZ,CAAP;AAfR;AAiBH,WA5BiD,CA8BlD;;;AAEA,mBAASqB,YAAT,GAAwB;AAAA,gBACZO,QADY,GACWV,IADX,CACZU,QADY;AAAA,gBACFC,QADE,GACWX,IADX,CACFW,QADE;AAEpB,gBAAMrC,IAAI,GAAGkB,KAAK,CAACoB,IAAN,CAAW,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACH,QAAF,KAAeA,QAAf,IAA2BG,CAAC,CAACF,QAAF,KAAeA,QAA9C;AAAA,aAAZ,CAAb;AACA,gBAAI,CAACrC,IAAL,EAAW,OAAOe,KAAK,CAAC,mCAAD,CAAZ;AACX,mBAAOyB,EAAE,CAAC;AACN9C,gBAAE,EAAEM,IAAI,CAACN,EADH;AAEN0C,sBAAQ,EAAEpC,IAAI,CAACoC,QAFT;AAGNK,uBAAS,EAAEzC,IAAI,CAACyC,SAHV;AAINC,sBAAQ,EAAE1C,IAAI,CAAC0C,QAJT;AAKNC,mBAAK,EAAE;AALD,aAAD,CAAT;AAOH;;AAED,mBAASb,QAAT,GAAoB;AAChB,gBAAM9B,IAAI,GAAG0B,IAAb;;AAEA,gBAAIR,KAAK,CAACoB,IAAN,CAAW,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACH,QAAF,KAAepC,IAAI,CAACoC,QAAxB;AAAA,aAAZ,CAAJ,EAAmD;AAC/C,qBAAOrB,KAAK,CAAC,eAAef,IAAI,CAACoC,QAApB,GAA+B,oBAAhC,CAAZ;AACH;;AAEDpC,gBAAI,CAACN,EAAL,GAAUwB,KAAK,CAAC0B,MAAN,GAAeC,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQ3B,KAAK,CAAC6B,GAAN,CAAU,UAAAR,CAAC;AAAA,qBAAIA,CAAC,CAAC7C,EAAN;AAAA,aAAX,CAAR,EAAJ,GAAoC,CAAnD,GAAuD,CAAjE;AACAwB,iBAAK,CAAC8B,IAAN,CAAWhD,IAAX;AACAqB,wBAAY,CAAC4B,OAAb,CAAqB,OAArB,EAA8B9B,IAAI,CAAC+B,SAAL,CAAehC,KAAf,CAA9B;AACA,mBAAOsB,EAAE,EAAT;AACH;;AAED,mBAAST,QAAT,GAAoB;AAChB,gBAAI,CAACoB,UAAU,EAAf,EAAmB,OAAOC,YAAY,EAAnB;AACnB,mBAAOZ,EAAE,CAACtB,KAAD,CAAT;AACH;;AAED,mBAASe,WAAT,GAAuB;AACnB,gBAAI,CAACkB,UAAU,EAAf,EAAmB,OAAOC,YAAY,EAAnB;AAEnB,gBAAMpD,IAAI,GAAGkB,KAAK,CAACoB,IAAN,CAAW,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAAC7C,EAAF,KAAS2D,SAAS,EAAtB;AAAA,aAAZ,CAAb;AACA,mBAAOb,EAAE,CAACxC,IAAD,CAAT;AACH;;AAED,mBAASkC,UAAT,GAAsB;AAClB,gBAAI,CAACiB,UAAU,EAAf,EAAmB,OAAOC,YAAY,EAAnB;AAEnB,gBAAIE,MAAM,GAAG5B,IAAb;AACA,gBAAI1B,IAAI,GAAGkB,KAAK,CAACoB,IAAN,CAAW,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAAC7C,EAAF,KAAS2D,SAAS,EAAtB;AAAA,aAAZ,CAAX,CAJkB,CAMlB;;AACA,gBAAI,CAACC,MAAM,CAACjB,QAAZ,EAAsB;AAClB,qBAAOiB,MAAM,CAACjB,QAAd;AACH,aATiB,CAWlB;;;AACAkB,kBAAM,CAACC,MAAP,CAAcxD,IAAd,EAAoBsD,MAApB;AACAjC,wBAAY,CAAC4B,OAAb,CAAqB,OAArB,EAA8B9B,IAAI,CAAC+B,SAAL,CAAehC,KAAf,CAA9B;AAEA,mBAAOsB,EAAE,EAAT;AACH;;AAED,mBAASL,UAAT,GAAsB;AAClB,gBAAI,CAACgB,UAAU,EAAf,EAAmB,OAAOC,YAAY,EAAnB;AAEnBlC,iBAAK,GAAGA,KAAK,CAACuC,MAAN,CAAa,UAAAlB,CAAC;AAAA,qBAAIA,CAAC,CAAC7C,EAAF,KAAS2D,SAAS,EAAtB;AAAA,aAAd,CAAR;AACAhC,wBAAY,CAAC4B,OAAb,CAAqB,OAArB,EAA8B9B,IAAI,CAAC+B,SAAL,CAAehC,KAAf,CAA9B;AACA,mBAAOsB,EAAE,EAAT;AACH,WA9FiD,CAgGlD;;;AAEA,mBAASA,EAAT,CAAYd,IAAZ,EAAmB;AACf,mBAAO,gDAAG,IAAI,iEAAJ,CAAiB;AAAEb,oBAAM,EAAE,GAAV;AAAea,kBAAI,EAAJA;AAAf,aAAjB,CAAH,CAAP;AACH;;AAED,mBAASX,KAAT,CAAeC,OAAf,EAAwB;AACpB,mBAAO,wDAAW;AAAED,mBAAK,EAAE;AAAEC,uBAAO,EAAPA;AAAF;AAAT,aAAX,CAAP;AACH;;AAED,mBAASoC,YAAT,GAAwB;AACpB,mBAAO,wDAAW;AAAEvC,oBAAM,EAAE,GAAV;AAAeE,mBAAK,EAAE;AAAEC,uBAAO,EAAE;AAAX;AAAtB,aAAX,CAAP;AACH;;AAED,mBAASmC,UAAT,GAAsB;AAClB,mBAAO1B,OAAO,CAACiC,GAAR,CAAY,eAAZ,MAAiC,uBAAxC;AACH;;AAED,mBAASL,SAAT,GAAqB;AACjB,gBAAMM,QAAQ,GAAGtD,GAAG,CAACuD,KAAJ,CAAU,GAAV,CAAjB;AACA,mBAAOC,QAAQ,CAACF,QAAQ,CAACA,QAAQ,CAACf,MAAT,GAAkB,CAAnB,CAAT,CAAf;AACH;AACJ;;;;;;;uBAvHQrB,sB;AAAsB,K;;;aAAtBA,sB;AAAsB,eAAtBA,sBAAsB;;;;;sEAAtBA,sB,EAAsB;cADlC;AACkC,Q;;;AA0H5B,QAAMuC,mBAAmB,GAAG;AAC/B;AACAC,aAAO,EAAE,sEAFsB;AAG/BC,cAAQ,EAAEzC,sBAHqB;AAI/B0C,WAAK,EAAE;AAJwB,KAA5B;;;;;;;;;;;;;;;;ACnIP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,c;AACT,8BAAoBrE,cAApB,EAAoD;AAAA;;AAAhC,aAAAA,cAAA,GAAAA,cAAA;AAAmC;;;;kCAE7CW,O,EAA2BC,I,EAAiB;AAClD;AACA,cAAMT,IAAI,GAAG,KAAKH,cAAL,CAAoBI,SAAjC;AACA,cAAMkD,UAAU,GAAGnD,IAAI,IAAIA,IAAI,CAAC2C,KAAhC;AACA,cAAMwB,QAAQ,GAAG3D,OAAO,CAACH,GAAR,CAAY+D,UAAZ,CAAuB,uBAAvB,CAAjB;;AACA,cAAIjB,UAAU,IAAIgB,QAAlB,EAA4B;AACxB3D,mBAAO,GAAGA,OAAO,CAAC6D,KAAR,CAAc;AACpBC,wBAAU,EAAE;AACRC,6BAAa,mBAAYvE,IAAI,CAAC2C,KAAjB;AADL;AADQ,aAAd,CAAV;AAKH;;AAED,iBAAOlC,IAAI,CAACC,MAAL,CAAYF,OAAZ,CAAP;AACH;;;;;;;uBAjBQ0D,c,EAAc,gI;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc;;;;;sEAAdA,c,EAAc;cAD1B;AAC0B,Q;;;;;;;;;;;;;;;;;;;;;;ACR3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaM,c;AAIT,8BACY5E,MADZ,EAEY6E,IAFZ,EAE4B;AAAA;;AADhB,aAAA7E,MAAA,GAAAA,MAAA;AACA,aAAA6E,IAAA,GAAAA,IAAA;AAER,aAAKC,WAAL,GAAmB,IAAI,oDAAJ,CAA0BvD,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAA1B,CAAnB;AACA,aAAKtB,IAAL,GAAY,KAAK0E,WAAL,CAAiBC,YAAjB,EAAZ;AACH;;;;8BAMKvC,Q,EAAUC,Q,EAAU;AAAA;;AACtBD,kBAAQ,GAAG,GAAX;AACAC,kBAAQ,GAAG,KAAX;AACA,iBAAO,KAAKoC,IAAL,CAAUG,IAAV,6CAAiE;AAAExC,oBAAQ,EAARA,QAAF;AAAYC,oBAAQ,EAARA;AAAZ,WAAjE,EACF1B,IADE,CACG,2DAAI,UAAAX,IAAI,EAAI;AACd;AACAqB,wBAAY,CAAC4B,OAAb,CAAqB,MAArB,EAA6B9B,IAAI,CAAC+B,SAAL,CAAelD,IAAf,CAA7B;;AACA,kBAAI,CAAC0E,WAAL,CAAiBjE,IAAjB,CAAsBT,IAAtB;;AACA,mBAAOA,IAAP;AACH,WALK,CADH,CAAP;AAOH;;;iCAEQ;AACL;AACAqB,sBAAY,CAACwD,UAAb,CAAwB,MAAxB;AACA,eAAKH,WAAL,CAAiBjE,IAAjB,CAAsB,IAAtB;AACA,eAAKb,MAAL,CAAYM,QAAZ,CAAqB,CAAC,gBAAD,CAArB;AACH;;;iCAEQF,I,EAAY;AACjB,iBAAO,KAAKyE,IAAL,CAAUG,IAAV,mCAAiD5E,IAAjD,CAAP;AACH;;;4BAzBmB;AAChB,iBAAO,KAAK0E,WAAL,CAAiBI,KAAxB;AACH;;;;;;;uBAdQN,c,EAAc,8G,EAAA,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBADD;;;;;sEACbA,c,EAAc;cAD1B,wDAC0B;eADf;AAAElE,oBAAU,EAAE;AAAd,S;AACe,Q;;;;;;;;;;;;;;;;;;;;;;;;ACR3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACQoB;;AAAwC;;AAAoB;;;;;;AADhE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAOL;;AAAwC;;AAAoB;;;;;;AADhE;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;;;AAKL;;;;;;;;;;QDZPyE,c;AAMT,8BACYC,WADZ,EAEYlF,KAFZ,EAGYF,MAHZ,EAIYC,cAJZ,EAI0C;AAAA;;AAH9B,aAAAmF,WAAA,GAAAA,WAAA;AACA,aAAAlF,KAAA,GAAAA,KAAA;AACA,aAAAF,MAAA,GAAAA,MAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AARZ,aAAAoF,OAAA,GAAU,KAAV;AACA,aAAAC,SAAA,GAAY,KAAZ;AAQK;;;;mCAEM;AACP,eAAKC,IAAL,GAAY,KAAKH,WAAL,CAAiBI,KAAjB,CAAuB;AAC/BhD,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWiD,QAAhB,CADqB;AAE/BhD,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWgD,QAAhB;AAFqB,WAAvB,CAAZ,CADO,CAMP;;AACA,eAAKjF,SAAL,GAAiB,KAAKN,KAAL,CAAWwF,QAAX,CAAoBnF,WAApB,CAAgC,WAAhC,KAAgD,GAAjE;AACH,S,CAED;;;;mCAGW;AAAA;;AACP,eAAK+E,SAAL,GAAiB,IAAjB,CADO,CAGP;AACA;AACA;AACA;AAEA;;AACA,eAAKrF,cAAL,CAAoB0F,KAApB,CAA0B,uBAA1B,EAAmD,uBAAnD,EACC5E,IADD,CACM,8DADN,EAEC6E,SAFD,CAGI,UAAAC,IAAI,EAAI;AACJ,kBAAI,CAAC7F,MAAL,CAAYM,QAAZ,CAAqB,CAAC,MAAI,CAACE,SAAN,CAArB;AACH,WALL,EAMI,UAAAW,KAAK,EAAI;AACL;AACA,kBAAI,CAACkE,OAAL,GAAe,KAAf;AACH,WATL,EATO,CAmBP;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACP;;;4BA7BO;AAAE,iBAAO,KAAKE,IAAL,CAAUO,QAAjB;AAA4B;;;;;;;uBAxB7BX,c,EAAc,2H,EAAA,+H,EAAA,uH,EAAA,yI;AAAA,K;;;YAAdA,c;AAAc,mC;AAAA,e;AAAA,c;AAAA,smB;AAAA;AAAA;ACR3B;;AACI;;AAAwB;;AAAK;;AAC7B;;AACI;;AAAyB;AAAA,mBAAY,IAAAY,QAAA,EAAZ;AAAsB,WAAtB;;AACrB;;AACI;;AAAsB;;AAAQ;;AAC9B;;AACA;;AAGJ;;AACA;;AACI;;AAAsB;;AAAQ;;AAC9B;;AACA;;AAGJ;;AACA;;AACI;;AACI;;AACA;;AACJ;;AACA;;AAAiD;;AAAQ;;AAC7D;;AACJ;;AACJ;;AACJ;;;;AAxBc;;AAAA;;AAGqE;;AAAA;;AAC9D;;AAAA;;AAMkE;;AAAA;;AAClE;;AAAA;;AAKG;;AAAA;;AACE;;AAAA;;;;;;;;;sEDZbZ,c,EAAc;cAD1B,uDAC0B;eADhB;AAAEa,qBAAW,EAAE;AAAf,S;AACgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AER3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAaaC,Y,GAXb;AAAA;;AAYE,WAAAC,SAAA,GAAoB,qBAApB;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,8B;AAAA,c;AAAA,a;AAAA,gC;AAAA;AAAA;AARrB;;AAAK;;AAAI;;AAAa;;AACpB;;AAAK;;AAAkB;;AACzB;;AACA;;AACE;;AACF;;;;AALS;;AAAA;;;;;;;;;sEAQAA,Y,EAAY;cAXxB,uDAWwB;eAXd;AACTE,kBAAQ,EAAE,SADD;AAETC,kBAAQ;AAFC,S;AAWc,Q;;;;;;;;;;;;;;;;;;ACbzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAmDaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBART,CACT;AAAElC,eAAO,EAAE,uEAAX;AAA8BC,gBAAQ,EAAE,uEAAxC;AAAwDC,aAAK,EAAE;AAA/D,OADS,EAET;AAAEF,eAAO,EAAE,uEAAX;AAA8BC,gBAAQ,EAAE,2EAAxC;AAA0DC,aAAK,EAAE;AAAjE,OAFS,EAGT;AACA,gFAJS,C;AAKZ,gBApBU,CACP,sEADO,EAEP,mEAFO,EAGP,2DAHO,EAIP,6DAJO,EAKP,uEALO,EAMP,6DAAaiC,OAAb,CAAqB,CACnB;AAAEC,YAAI,EAAE,SAAR;AAAmBC,iBAAS,EAAE;AAA9B,OADmB,EAEnB;AAAED,YAAI,EAAE,OAAR;AAAiBC,iBAAS,EAAE,kEAA5B;AAA2CC,mBAAW,EAAE,CAAC,6DAAD;AAAxD,OAFmB,EAGnB;AAAEF,YAAI,EAAE,MAAR;AAAgBC,iBAAS,EAAE;AAA3B,OAHmB,EAInB;AAAED,YAAI,EAAE,OAAR;AAAiBC,iBAAS,EAAE;AAA5B,OAJmB,EAKnB;AAAED,YAAI,EAAE,EAAR;AAAYG,kBAAU,EAAE,SAAxB;AAAmCC,iBAAS,EAAE;AAA9C,OALmB,EAMnB;AAAEJ,YAAI,EAAE,IAAR;AAAcG,kBAAU,EAAE,SAA1B;AAAqCC,iBAAS,EAAE;AAAhD,OANmB,CAArB,CANO,CAoBV;;;;0HAGYN,S,EAAS;AAAA,uBA3BlB,2DA2BkB,EA1BlB,8DA0BkB,EAzBlB,wEAyBkB;AAzBJ,kBAGd,sEAHc,EAId,mEAJc,EAKd,2DALc,EAMd,6DANc,EAOd,uEAPc,EAOD,4DAPC;AAyBI,O;AAlBL,K;;;;;sEAkBJA,S,EAAS;cA7BrB,sDA6BqB;eA7BZ;AACRO,sBAAY,EAAE,CACZ,2DADY,EAEZ,8DAFY,EAGZ,wEAHY,CADN;AAMRC,iBAAO,EAAE,CACP,sEADO,EAEP,mEAFO,EAGP,2DAHO,EAIP,6DAJO,EAKP,uEALO,EAMP,6DAAaP,OAAb,CAAqB,CACnB;AAAEC,gBAAI,EAAE,SAAR;AAAmBC,qBAAS,EAAE;AAA9B,WADmB,EAEnB;AAAED,gBAAI,EAAE,OAAR;AAAiBC,qBAAS,EAAE,kEAA5B;AAA2CC,uBAAW,EAAE,CAAC,6DAAD;AAAxD,WAFmB,EAGnB;AAAEF,gBAAI,EAAE,MAAR;AAAgBC,qBAAS,EAAE;AAA3B,WAHmB,EAInB;AAAED,gBAAI,EAAE,OAAR;AAAiBC,qBAAS,EAAE;AAA5B,WAJmB,EAKnB;AAAED,gBAAI,EAAE,EAAR;AAAYG,sBAAU,EAAE,SAAxB;AAAmCC,qBAAS,EAAE;AAA9C,WALmB,EAMnB;AAAEJ,gBAAI,EAAE,IAAR;AAAcG,sBAAU,EAAE,SAA1B;AAAqCC,qBAAS,EAAE;AAAhD,WANmB,CAArB,CANO,CAND;AAqBRG,mBAAS,EAAE,CACT;AAAE3C,mBAAO,EAAE,uEAAX;AAA8BC,oBAAQ,EAAE,uEAAxC;AAAwDC,iBAAK,EAAE;AAA/D,WADS,EAET;AAAEF,mBAAO,EAAE,uEAAX;AAA8BC,oBAAQ,EAAE,2EAAxC;AAA0DC,iBAAK,EAAE;AAAjE,WAFS,EAGT;AACA,oFAJS,CArBH;AA2BR0C,mBAAS,EAAE,CAAC,2DAAD;AA3BH,S;AA6BY,Q;;;;;;;;;;;;;;;;;;ACnDtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaC,a,GAGT,uBAAoB/G,cAApB,EAAoD;AAAA;;AAAhC,WAAAA,cAAA,GAAAA,cAAA;AAChB,WAAKG,IAAL,GAAY,KAAKH,cAAL,CAAoBI,SAAhC;AACH,K;;;uBALQ2G,a,EAAa,yI;AAAA,K;;;YAAbA,a;AAAa,mC;AAAA,c;AAAA,a;AAAA,sE;AAAA;AAAA;ACN1B;;AACI;;AACI;;AAAI;;AAAsB;;AAC1B;;AAAG;;AAAiC;;AACpC;;AAAG;;AAAuB;;AAAY;;AAAI;;AAC9C;;AACJ;;;;AAJY;;AAAA;;;;;;;;sEDICA,a,EAAa;cADzB,uDACyB;eADf;AAAEhB,qBAAW,EAAE;AAAf,S;AACe,Q;;;;;;;;;;;;;;;;;;;;;;AEN1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaiB,gB,GAHb;AAAA;;AAIS,WAAAf,SAAA,GAAY,SAAZ;AACR,K;;;uBAFYe,gB;AAAgB,K;;;YAAhBA,gB;AAAgB,mC;AAAA,e;AAAA,a;AAAA,wR;AAAA;AAAA;ACL7B;;AACE;;AACE;;AACF;;AACA;;AACE;;AACE;;AACE;;AAGF;;AAEA;;AAAyB;;AAAa;;AACtC;;AACE;;AAAI;;AAAc;;AACpB;;AAEA;;AAAyB;;AAAc;;AACvC;;AACE;;AAA0C;;AAAwB;;AACpE;;AACF;;AACF;;AACF;;;;AArBI;;AAAA;;;;;;;;sEDGSA,gB,EAAgB;cAH5B,uDAG4B;eAHlB;AACTjB,qBAAW,EAAE;AADJ,S;AAGkB,Q;;;;;;;;;;;;;;;;;;AEL7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAeakB,U,GAbb;AAAA;;AAcE,WAAAhB,SAAA,GAAoB,qBAApB;AACD,K;;;uBAFYgB,U;AAAU,K;;;YAAVA,U;AAAU,mC;AAAA,c;AAAA,a;AAAA,iG;AAAA;AAAA;AAXnB;;AACE;;AAAK;;AAAwB;;AAC/B;;AACA;;AACE;;AACE;;AACF;;AACA;;AAAgD;;AAAQ;;AAC1D;;;;;;;;;sEAGSA,U,EAAU;cAbtB,uDAasB;eAbZ;AACTd,kBAAQ;AADC,S;AAaY,Q;;;;;;;;;;;;;;;;;;ACfvB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMe,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAArG,GAAG;AAAA,aAAIsG,OAAO,CAACnG,KAAR,CAAcH,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private accountService: AccountService\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const user = this.accountService.userValue;\n        //if (user) {\n            // authorised so return true\n            return true;\n        //}\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/account/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AccountService } from '../_services/account.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private accountService: AccountService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.accountService.logout();\n            }\n            \n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\n\n// array in local storage for registered users\nlet users = JSON.parse(localStorage.getItem('users')) || [];\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const { url, method, headers, body } = request;\n\n        // wrap in delayed observable to simulate server api call\n        return of(null)\n            .pipe(mergeMap(handleRoute))\n            .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\n            .pipe(delay(500))\n            .pipe(dematerialize());\n\n        function handleRoute() {\n            switch (true) {\n                case url.endsWith('/users/authenticate') && method === 'POST':\n                    return authenticate();\n                case url.endsWith('/users/register') && method === 'POST':\n                    return register();\n                case url.endsWith('/users') && method === 'GET':\n                    return getUsers();\n                case url.match(/\\/users\\/\\d+$/) && method === 'GET':\n                    return getUserById();\n                case url.match(/\\/users\\/\\d+$/) && method === 'PUT':\n                    return updateUser();\n                case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\n                    return deleteUser();\n                default:\n                    // pass through any requests not handled above\n                    return next.handle(request);\n            }    \n        }\n\n        // route functions\n\n        function authenticate() {\n            const { username, password } = body;\n            const user = users.find(x => x.username === username && x.password === password);\n            if (!user) return error('Username or password is incorrect');\n            return ok({\n                id: user.id,\n                username: user.username,\n                firstName: user.firstName,\n                lastName: user.lastName,\n                token: 'fake-jwt-token'\n            })\n        }\n\n        function register() {\n            const user = body\n\n            if (users.find(x => x.username === user.username)) {\n                return error('Username \"' + user.username + '\" is already taken')\n            }\n\n            user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\n            users.push(user);\n            localStorage.setItem('users', JSON.stringify(users));\n            return ok();\n        }\n\n        function getUsers() {\n            if (!isLoggedIn()) return unauthorized();\n            return ok(users);\n        }\n\n        function getUserById() {\n            if (!isLoggedIn()) return unauthorized();\n\n            const user = users.find(x => x.id === idFromUrl());\n            return ok(user);\n        }\n\n        function updateUser() {\n            if (!isLoggedIn()) return unauthorized();\n\n            let params = body;\n            let user = users.find(x => x.id === idFromUrl());\n\n            // only update password if entered\n            if (!params.password) {\n                delete params.password;\n            }\n\n            // update and save user\n            Object.assign(user, params);\n            localStorage.setItem('users', JSON.stringify(users));\n\n            return ok();\n        }\n\n        function deleteUser() {\n            if (!isLoggedIn()) return unauthorized();\n\n            users = users.filter(x => x.id !== idFromUrl());\n            localStorage.setItem('users', JSON.stringify(users));\n            return ok();\n        }\n\n        // helper functions\n\n        function ok(body?) {\n            return of(new HttpResponse({ status: 200, body }))\n        }\n\n        function error(message) {\n            return throwError({ error: { message } });\n        }\n\n        function unauthorized() {\n            return throwError({ status: 401, error: { message: 'Unauthorised' } });\n        }\n\n        function isLoggedIn() {\n            return headers.get('Authorization') === 'Bearer fake-jwt-token';\n        }\n\n        function idFromUrl() {\n            const urlParts = url.split('/');\n            return parseInt(urlParts[urlParts.length - 1]);\n        }\n    }\n}\n\nexport const fakeBackendProvider = {\n    // use fake backend in place of Http service for backend-less development\n    provide: HTTP_INTERCEPTORS,\n    useClass: FakeBackendInterceptor,\n    multi: true\n};","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\nimport { AccountService } from '../_services/account.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private accountService: AccountService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add auth header with jwt if user is logged in and request is to the api url\n        const user = this.accountService.userValue;\n        const isLoggedIn = user && user.token;\n        const isApiUrl = request.url.startsWith('http://localhost:4200');\n        if (isLoggedIn && isApiUrl) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${user.token}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../_models/user';\n\n@Injectable({ providedIn: 'root' })\nexport class AccountService {\n    private userSubject: BehaviorSubject<User>;\n    public user: Observable<User>;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient\n    ) {\n        this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\n        this.user = this.userSubject.asObservable();\n    }\n\n    public get userValue(): User {\n        return this.userSubject.value;\n    }\n\n    login(username, password) {\n        username = \"w\";\n        password = \"waw\"\n        return this.http.post<User>(`http://localhost:4200/users/authenticate`, { username, password })\n            .pipe(map(user => {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('user', JSON.stringify(user));\n                this.userSubject.next(user);\n                return user;\n            }));\n    }\n\n    logout() {\n        // remove user from local storage and set current user to null\n        localStorage.removeItem('user');\n        this.userSubject.next(null);\n        this.router.navigate(['/account/login']);\n    }\n\n    register(user: User) {\n        return this.http.post(`http://90.90122/users/register`, user);\n    }\n\n\n}","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService } from '../_services/account.service';\n\n@Component({ templateUrl: 'login.component.html' })\nexport class LoginComponent implements OnInit {\n    form: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n    ) { }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        // if (this.form.invalid) {\n        //     return;\n        // }\n\n        // this.loading = true;\n        this.accountService.login(\"this.f.username.value\", \"this.f.password.value\")\n        .pipe(first())\n        .subscribe(\n            data => {\n                this.router.navigate([this.returnUrl]);\n            },\n            error => {\n                //this.alertService.error(error);\n                this.loading = false;\n            });\n        //this.router.navigate(['/willy']);\n            // .subscribe(\n            //     data => {\n            //         this.router.navigate([this.returnUrl]);\n            //     },\n            //     error => {\n            //         this.loading = false;\n            //     });\n    }\n}","<div class=\"card\">\n    <h4 class=\"card-header\">Login</h4>\n    <div class=\"card-body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    Login\n                </button>\n                <a routerLink=\"../register\" class=\"btn btn-link\">Register</a>\n            </div>\n        </form>\n    </div>\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'pm-root',\r\n  template: `\r\n    <div><h1>{{pageTitle}}</h1>\r\n      <div>My First Component</div>\r\n    </div>\r\n    <div class='container'>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n    `\r\n})\r\nexport class AppComponent {\r\n  pageTitle: string = 'Acme s ManageWWment';\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { WComponent } from './module1/wcomponent';\r\n\r\nimport { WelcomeComponent } from './home/welcome.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nimport { ErrorInterceptor } from './_helpers/error.interceptor';\r\nimport { JwtInterceptor } from './_helpers/jwt.interceptor';\r\n\r\nimport { AuthGuard } from './_helpers/auth.guard';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './account/login.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { fakeBackendProvider } from './_helpers/fake-backend';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    WComponent,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    BrowserModule,\r\n    RouterModule.forRoot([\r\n      { path: 'welcome', component: WelcomeComponent },\r\n      { path: 'willy', component: HomeComponent, canActivate: [AuthGuard] },\r\n      { path: 'bajs', component: WComponent },\r\n      { path: 'login', component: LoginComponent },\r\n      { path: '', redirectTo: 'welcome', pathMatch: 'full' },\r\n      { path: '**', redirectTo: 'welcome', pathMatch: 'full' }\r\n    ])\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    // provider used to create fake backend\r\n    fakeBackendProvider\r\n],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\n\nimport { User } from '../_models/user';\nimport { AccountService } from '../_services/account.service';\n\n@Component({ templateUrl: 'home.component.html' })\nexport class HomeComponent {\n    user: User;\n\n    constructor(private accountService: AccountService) {\n        this.user = this.accountService.userValue;\n    }\n}","<div class=\"p-4\">\n    <div class=\"container\">\n        <h1>Hi {{user.firstName}}!</h1>\n        <p>You're logged in with Angular 9!!</p>\n        <p><a routerLink=\"/users\">Manage Users</a></p>\n    </div>\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: './welcome.component.html'\r\n})\r\nexport class WelcomeComponent {\r\n  public pageTitle = 'Welcome';\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    {{pageTitle}}\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"text-center\">\r\n        <img src=\"./assets/images/logo.jpg\"\r\n             class=\"img-responsive center-block\"\r\n             style=\"max-height:300px;padding-bottom:50px\" />\r\n      </div>\r\n\r\n      <div class=\"text-center\">Developed by:</div>\r\n      <div class=\"text-center\">\r\n        <h3>Deborah Kurata</h3>\r\n      </div>\r\n\r\n      <div class=\"text-center\">@deborahkurata</div>\r\n      <div class=\"text-center\">\r\n        <a href=\"http://www.bit.ly/DeborahKsBlog\">www.bit.ly/DeborahKsBlog</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  template: `\n    <div>\n      <div>My First Component Willy</div>\n    </div>\n    <div class=\"card\">\n      <div class=\"card-body\">\n        This is some text within a card body.\n      </div>\n      <a routerLink=\"../welcome\" class=\"btn btn-link\">Register</a>\n    </div>\n    `\n})\nexport class WComponent {\n  pageTitle: string = 'Acme s ManageWWment';\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}